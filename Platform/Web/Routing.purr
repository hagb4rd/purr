module Web.Routing {
  import Purr.Core
  import Data.String
  import Data.List
  import Data.Boolean

  ffi "var path = require('path'), url = require('url')"

  export
  data Router = { paths ^Record?, fallback ^Maybe?, wildcard ^Maybe? }

  export
  data RoutePart = _ ^SegmentR? SegmentR
                 | _ ^String? VariableR
                 | WildcardR
  
  export
  data RouteSpec = _ ^SegmentR? \*\ _ RouteSpec?
                 | NilR

  let $x SegmentR? => ffi """!/^(\.|\.\.)/.test($x)"""
  export $a /*/ $b => $b \*\ $a


  # Routes are represented as a prefix tree:
  #
  # GET /foo/bar/baz F
  # POST /foo/qux G
  #
  # + foo
  # |--+ bar
  # |  `--+ baz
  # |     `--o F
  # `--+ qux
  #    `--o G
  #
  # 
  
}