module Data.Either is

  import Purr.Core
  
  # -- Implicitly: data Either = Failure(_) | Success(_)
  export ( Either, Either?, Failure, Success )
  
  implement Equality for Either with
    method $this === $that ^Either? => match $this, $that with
                                       | $a Failure, $b Failure => $a === $b
                                       | $a Success, $b Success => $a === $b
                                       | _, _                   => false
                                       end
  end
  
  implement To-String for Either with
    method $this to-string => match $this with
                              | $a Failure => "Failure(" + $a to-string + ")"
                              | $a Success => "Success(" + $a to-string + ")"
                              end
  end
  
  implement Semigroup for Either with
    method $this + $that ^Either? => match $this, $that with
                                     | _ Failure, _            => $this
                                     | _,           _ Failure  => $that
                                     | $a Success, $b Success => ($a + $b) Success
                                     end
  end
  
  implement Functor for Either with
    method $this map: $f => match $this with
                            | _ Failure  => $this
                            | $a Success => $f($a) Success
                            end
  end

  implement Monad for Either with
    method $this chain: $f -> Either? => match $this with
                                         | _ Failure  => $this
                                         | $a Success => $f($a)
                                         end
  end
  
  implement Applicative for Either with
    method _ of: $x => $x Success
    method $this apply-to: $b => match $this with
                                 | _ Failure  => $this
                                 | $f Success => $b map: $f
                                 end
  end
  
  implement Alternative for Either with
    method none => Unit Failure
    method $this <|> $that ^Either? => match $this with
                                       | _ Failure => $that
                                       | _         => $this
                                       end
  end

end