module Data.Tuple {
  import Phemme.Core
  import Data.Boolean

  # -- Implicitly: Tuple: _ With: _
  export ( Tuple:With:, Tuple? )
  
  implement Equality for Tuple {
    method $this === $that ^Tuple? => match $this, $that {
      | Tuple: $x With: $y, Tuple: $x' With: $y' => ($x === $x') && ($y === $y')
    }
  }

  implement Representable for Tuple {
    method $this to-string => match $this {
      | Tuple: $x With: $y => "(" + $x to-string + ", " + $y to-string + ")"
    }
  }

  export $this first => match $this {
    | Tuple: $x With: _ => $x
  }

  export $this second => match $this {
    | Tuple: _ With: $x => $x
  }
}