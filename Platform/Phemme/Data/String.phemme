module Phemme.Data.String {

  implement Equality for String {
    method $this == $that => ffi "$this === $that"
  }

  implement Representable for String {
    method $this describe => ffi "$this"
  }

  implement Semigroup for String {
    method $this + $that ^String? => ffi "$this + $that"
  }

  implement Monoid for String {
    method $this empty => ""
  }

  # TODO: use a Character class to represent JS's conventional 1-length strings
  
  export $this ^String? upcase     => ffi "$this.toUpperCase()"
  export $this ^String? downcase   => ffi "$this.toLowerCase()"
  export $this ^String? trim       => ffi "$this.trim()"
  export $this ^String? trim-left  => ffi "$this.trimLeft()"
  export $this ^String? trim-right => ffi "$this.trimRight()"
  
}
