module Concurrency.Timers {
  import Phemme.Core
  import Data.Number
  import Data.Boolean
  import Data.Task

  let $n Time? => ($n > 0) && ($n < 2147483647) # Max Int32

  export $n ^Time? delay =>
    let $timerId = Unit
    in
      task: ffi """(function($next) {
        $timerId = setTimeout(function(){ 
          $next($self.Success(null)) 
        }, $n)
      })"""
      cleanup: ffi """(function() {
        clearTimeout($timerId)
      })"""

  export $n ^Time? timeout =>
    let $timerId = Unit
    in
      task: ffi """(function($next) {
        $timerId = setTimeout(function(){ 
          $next($self.Failure('Timeouted after ' + $n + ' milliseconds.')) 
        }, $n)
      })"""
      cleanup: ffi """(function() {
        clearTimeout($timerId)
      })"""

}
